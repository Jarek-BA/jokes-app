# The name of the workflow that will be displayed in the GitHub Actions tab.
name: CI/CD Pipeline

# The 'on' keyword specifies the events that trigger the workflow.
on:
  push:
    # This workflow will run on every push to the 'main' branch.
    branches:
      - main
  pull_request:
    # This workflow will run on every pull request that targets the 'main' branch.
    branches:
      - main

# 'jobs' groups together all the jobs that run in the workflow.
jobs:
  # The 'test' job is for running tests.
  test:
    # The name of the job, displayed in the GitHub Actions UI.
    name: Run Tests
    # 'runs-on' specifies the type of machine to run the job on. 'ubuntu-latest' is a virtual machine with the latest Ubuntu version.
    runs-on: ubuntu-latest

    # 'steps' are a sequence of tasks to be executed in the job.
    steps:
      # This step checks out your repository code so the job can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # This step sets up the Python environment.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Specifies the Python version to use for the job.
          python-version: '3.11'

# This step installs the project's dependencies in a virtual environment.
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # This step runs the tests using 'pytest' within the virtual environment.
      - name: Run tests
        run: |
          source .venv/bin/activate
          PYTHONPATH=. pytest -v

  # The 'deploy' job is for deploying the application.
  deploy:
    # 'needs' creates a dependency; this job will only run after the 'test' job completes successfully.
    needs: test
    # Specifies the machine to run the deploy job on.
    runs-on: ubuntu-latest
    # This conditional expression ensures the job only runs when the push is to the 'main' branch.
    if: github.ref == 'refs/heads/main'

    steps:
      # Checks out the repository code again for the deploy job.
      - name: Checkout repository
        uses: actions/checkout@v4

      # This step triggers a new deploy on Render using their API.
      - name: Deploy to Render
        # 'env' sets environment variables for the current step.
        env:
          # This pulls the Render API key from the GitHub secrets, a secure way to store sensitive information.
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        # The 'run' command executes a shell script.
        run: |
          # The 'curl' command is used to make a POST request to the Render API endpoint, triggering a new deployment.
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -d '' \
            https://api.render.com/v1/services/<YOUR_RENDER_SERVICE_ID>/deploys