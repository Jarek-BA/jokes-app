name: CI/CD Pipeline Staging

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging
  workflow_dispatch:

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pytest
        run: |
          source .venv/bin/activate
          PYTHONPATH=. pytest -v

  ui-test:
    name: Run Playwright UI Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install

      - name: Run Playwright Tests on Staging
        env:
          BASE_URL: https://jokes-app-test.onrender.com
        run: npx playwright test --config=playwright.config.js

  deploy:
    name: Deploy to Render (Staging)
    needs: [test, ui-test]   # Only deploy if tests pass
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Render (staging)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY_STAGING }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_STAGING }}
          APP_ENV: staging
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -d '' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
